import aiken/builtin
import aiken/tx

validator purchase(
  redeemer: {id: ByteArray, buyer: Address},
  tx_context: ScriptContext
) -> Bool {
  let
    tx_info = tx_context.tx_info
    policy_id = tx_context.policy_id
    asset_id = redeemer.id

    -- Find the input UTxO containing the NFT
    input_nft = tx.find_input(
      tx_info.inputs,
      {policy_id: policy_id, asset_name: asset_id}
    )

    -- Ensure NFT is listed
    is_listed = input_nft.price != None

    -- Check payment matches the price
    price_match = tx.payment_matches(
      tx_info.outputs,
      redeemer.buyer,
      input_nft.price.unwrap
    )
  in
    is_listed && price_match
}
type NFTState = {
    id: ByteArray,         -- Unique identifier of the NFT
    owner: ByteArray,      -- Current owner's address as a ByteArray (e.g., hash of the public key)
    price: Option<Int>,    -- Listing price (if listed, otherwise None)
    metadata: ByteArray    -- Metadata of the NFT
}

